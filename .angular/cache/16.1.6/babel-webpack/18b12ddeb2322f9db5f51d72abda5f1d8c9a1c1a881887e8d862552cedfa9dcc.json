{"ast":null,"code":"import { of } from 'rxjs';\nimport { TASKS } from '../mock-tasks';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class ServiceService {\n  constructor(http) {\n    this.http = http;\n    this.TaskList = [];\n  }\n  GetServie() {\n    this.TaskList = TASKS;\n    //return this.TaskList;\n    return of(this.TaskList);\n    const requestURL = 'http://localhost:3004/tasks';\n    this.http.get();\n  }\n}\nServiceService.ɵfac = function ServiceService_Factory(t) {\n  return new (t || ServiceService)(i0.ɵɵinject(i1.HttpClient));\n};\nServiceService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: ServiceService,\n  factory: ServiceService.ɵfac,\n  providedIn: 'root'\n});","map":{"version":3,"names":["of","TASKS","ServiceService","constructor","http","TaskList","GetServie","requestURL","get","i0","ɵɵinject","i1","HttpClient","factory","ɵfac","providedIn"],"sources":["C:\\Users\\yogek\\OneDrive\\Desktop\\Angular Project\\myApp\\src\\app\\services\\service.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport { Observable,of } from 'rxjs';\nimport { TASKS } from '../mock-tasks';\nimport { Task } from '../Task';\nimport {HttpClient,HttpHeaders} from '@angular/common/http'\n\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ServiceService {\n\n  TaskList : Task[] = [];\n\n  constructor(private http: HttpClient) { }\n\n  GetServie() : Observable<Task[]>\n  {\n    this.TaskList= TASKS;\n    //return this.TaskList;\n    return of(this.TaskList);\n    \n    const requestURL='http://localhost:3004/tasks';\n    this.http.get()\n  }\n}\n"],"mappings":"AACA,SAAoBA,EAAE,QAAQ,MAAM;AACpC,SAASC,KAAK,QAAQ,eAAe;;;AAQrC,OAAM,MAAOC,cAAc;EAIzBC,YAAoBC,IAAgB;IAAhB,KAAAA,IAAI,GAAJA,IAAI;IAFxB,KAAAC,QAAQ,GAAY,EAAE;EAEkB;EAExCC,SAASA,CAAA;IAEP,IAAI,CAACD,QAAQ,GAAEJ,KAAK;IACpB;IACA,OAAOD,EAAE,CAAC,IAAI,CAACK,QAAQ,CAAC;IAExB,MAAME,UAAU,GAAC,6BAA6B;IAC9C,IAAI,CAACH,IAAI,CAACI,GAAG,EAAE;EACjB;;AAdWN,cAAc,C;mBAAdA,cAAc,EAAAO,EAAA,CAAAC,QAAA,CAAAC,EAAA,CAAAC,UAAA;AAAA;AAAdV,cAAc,C;SAAdA,cAAc;EAAAW,OAAA,EAAdX,cAAc,CAAAY,IAAA;EAAAC,UAAA,EAFb;AAAM"},"metadata":{},"sourceType":"module","externalDependencies":[]}