{"ast":null,"code":"import { HttpHeaders } from '@angular/common/http';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nconst requestURL = 'http://localhost:3004/tasks';\nconst httpOptions = {\n  headers: new HttpHeaders({\n    'Content-Type': 'Application/json'\n  })\n};\nexport class ServiceService {\n  constructor(http) {\n    this.http = http;\n    this.TaskList = [];\n  }\n  GetServie() {\n    //this.TaskList= TASKS;\n    //return this.TaskList;\n    //return of(this.TaskList);\n    return this.http.get(requestURL);\n  }\n  DeleteTaskService(task) {\n    const DeleteUrl = `${requestURL}/${task.id}`;\n    return this.http.delete(DeleteUrl);\n  }\n  UpateToggleTaskService(task) {\n    return this.http.put(requestURL, task);\n  }\n}\nServiceService.ɵfac = function ServiceService_Factory(t) {\n  return new (t || ServiceService)(i0.ɵɵinject(i1.HttpClient));\n};\nServiceService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: ServiceService,\n  factory: ServiceService.ɵfac,\n  providedIn: 'root'\n});","map":{"version":3,"names":["HttpHeaders","requestURL","httpOptions","headers","ServiceService","constructor","http","TaskList","GetServie","get","DeleteTaskService","task","DeleteUrl","id","delete","UpateToggleTaskService","put","i0","ɵɵinject","i1","HttpClient","factory","ɵfac","providedIn"],"sources":["C:\\Users\\yogek\\OneDrive\\Desktop\\Angular Project\\myApp\\src\\app\\services\\service.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport { Observable, of } from 'rxjs';\nimport { TASKS } from '../mock-tasks';\nimport { Task } from '../Task';\nimport { HttpClient, HttpHeaders } from '@angular/common/http'\n\nconst requestURL = 'http://localhost:3004/tasks';\nconst httpOptions ={\n  headers: new HttpHeaders({\n    'Content-Type':'Application/json';\n  });\n}\n\n@Injectable({\n  providedIn: 'root'\n})\n\nexport class ServiceService {\n\n  TaskList: Task[] = [];\n\n  constructor(private http: HttpClient) { }\n\n  GetServie(): Observable<Task[]> {\n    //this.TaskList= TASKS;\n    //return this.TaskList;\n    //return of(this.TaskList);\n    return this.http.get<Task[]>(requestURL);\n  }\n  DeleteTaskService(task:Task):Observable<Task>\n  {\n    const DeleteUrl=`${requestURL}/${task.id}`\n    return this.http.delete<Task>(DeleteUrl);\n  }\n  UpateToggleTaskService(task:Task):Observable<Task>\n  {\n    return this.http.put<Task>(requestURL,task,);\n    \n  }\n}\n"],"mappings":"AAIA,SAAqBA,WAAW,QAAQ,sBAAsB;;;AAE9D,MAAMC,UAAU,GAAG,6BAA6B;AAChD,MAAMC,WAAW,GAAE;EACjBC,OAAO,EAAE,IAAIH,WAAW,CAAC;IACvB,cAAc,EAAC;GAChB;CACF;AAMD,OAAM,MAAOI,cAAc;EAIzBC,YAAoBC,IAAgB;IAAhB,KAAAA,IAAI,GAAJA,IAAI;IAFxB,KAAAC,QAAQ,GAAW,EAAE;EAEmB;EAExCC,SAASA,CAAA;IACP;IACA;IACA;IACA,OAAO,IAAI,CAACF,IAAI,CAACG,GAAG,CAASR,UAAU,CAAC;EAC1C;EACAS,iBAAiBA,CAACC,IAAS;IAEzB,MAAMC,SAAS,GAAC,GAAGX,UAAU,IAAIU,IAAI,CAACE,EAAE,EAAE;IAC1C,OAAO,IAAI,CAACP,IAAI,CAACQ,MAAM,CAAOF,SAAS,CAAC;EAC1C;EACAG,sBAAsBA,CAACJ,IAAS;IAE9B,OAAO,IAAI,CAACL,IAAI,CAACU,GAAG,CAAOf,UAAU,EAACU,IAAI,CAAE;EAE9C;;AArBWP,cAAc,C;mBAAdA,cAAc,EAAAa,EAAA,CAAAC,QAAA,CAAAC,EAAA,CAAAC,UAAA;AAAA;AAAdhB,cAAc,C;SAAdA,cAAc;EAAAiB,OAAA,EAAdjB,cAAc,CAAAkB,IAAA;EAAAC,UAAA,EAHb;AAAM"},"metadata":{},"sourceType":"module","externalDependencies":[]}